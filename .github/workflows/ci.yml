# Cogniscient Next.js CI/CD Pipeline
name: CI/CD

# 觸發條件：當推送到 main 分支或建立 PR 時執行
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# 允許手動觸發工作流程
  workflow_dispatch:

jobs:
  # 程式碼品質檢查和建置
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    # 檢出程式碼
    - name: 檢出程式碼
      uses: actions/checkout@v4

    # 設定 Node.js 環境
    - name: 設定 Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # 安裝依賴套件
    - name: 安裝依賴套件
      run: npm ci

    # 執行 ESLint 程式碼檢查
    - name: 執行 Lint 檢查
      run: npm run lint

    # 執行 TypeScript 型別檢查
    - name: 執行 TypeScript 檢查
      run: npx tsc --noEmit

    # 建置專案
    - name: 建置專案
      run: npm run build

    # 檢查建置結果
    - name: 檢查建置結果
      run: |
        if [ -d ".next" ]; then
          echo "✅ 建置成功"
        else
          echo "❌ 建置失敗"
          exit 1
        fi

    # 快取建置結果以供後續步驟使用
    - name: 快取建置結果
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  # 安全性掃描
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4

    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 安裝依賴套件
      run: npm ci

    - name: 執行 npm audit 安全性檢查
      run: npm audit --audit-level high
      continue-on-error: true

  # 部署到預覽環境（僅 PR）
  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4

    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 安裝依賴套件
      run: npm ci

    - name: 建置專案
      run: npm run build

    # 此處可加入部署到預覽環境的步驟
    - name: 部署預覽資訊
      run: echo "PR #${{ github.event.number }} 預覽版本已準備就緒"

  # 部署到正式環境（僅 main 分支）
  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4

    - name: 設定 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 安裝依賴套件
      run: npm ci

    - name: 建置專案
      run: npm run build

    # 此處可加入部署到正式環境的步驟
    - name: 部署正式環境資訊
      run: echo "專案已部署到正式環境"

